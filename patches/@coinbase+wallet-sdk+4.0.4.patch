diff --git a/node_modules/@coinbase/wallet-sdk/dist/core/type/util.js b/node_modules/@coinbase/wallet-sdk/dist/core/type/util.js
index fc12817..34ee264 100644
--- a/node_modules/@coinbase/wallet-sdk/dist/core/type/util.js
+++ b/node_modules/@coinbase/wallet-sdk/dist/core/type/util.js
@@ -170,6 +170,7 @@ function range(start, stop) {
 }
 exports.range = range;
 function getFavicon() {
+    return null
     const el = document.querySelector('link[sizes="192x192"]') ||
         document.querySelector('link[sizes="180x180"]') ||
         document.querySelector('link[rel="icon"]') ||
diff --git a/node_modules/@coinbase/wallet-sdk/dist/util/ScopedLocalStorage.js b/node_modules/@coinbase/wallet-sdk/dist/util/ScopedLocalStorage.js
index 3774710..302e37a 100644
--- a/node_modules/@coinbase/wallet-sdk/dist/util/ScopedLocalStorage.js
+++ b/node_modules/@coinbase/wallet-sdk/dist/util/ScopedLocalStorage.js
@@ -2,37 +2,40 @@
 // Copyright (c) 2018-2024 Coinbase, Inc. <https://www.coinbase.com/>
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.ScopedLocalStorage = void 0;
+
+const { MMKV } = require("react-native-mmkv");
+
 class ScopedLocalStorage {
-    constructor(scope, module) {
-        this.scope = scope;
-        this.module = module;
-    }
-    setItem(key, value) {
-        localStorage.setItem(this.scopedKey(key), value);
-    }
-    getItem(key) {
-        return localStorage.getItem(this.scopedKey(key));
-    }
-    removeItem(key) {
-        localStorage.removeItem(this.scopedKey(key));
-    }
-    clear() {
-        const prefix = this.scopedKey('');
-        const keysToRemove = [];
-        for (let i = 0; i < localStorage.length; i++) {
-            const key = localStorage.key(i);
-            if (typeof key === 'string' && key.startsWith(prefix)) {
-                keysToRemove.push(key);
-            }
-        }
-        keysToRemove.forEach((key) => localStorage.removeItem(key));
-    }
-    scopedKey(key) {
-        return `-${this.scope}${this.module ? `:${this.module}` : ''}:${key}`;
-    }
-    static clearAll() {
-        new ScopedLocalStorage('CBWSDK').clear();
-        new ScopedLocalStorage('walletlink').clear();
-    }
+  constructor(scope, module) {
+    this.scope = scope;
+    this.module = module;
+    this.storage = new MMKV({ id: `${scope}${module ? `:${module}` : ""}` });
+  }
+
+  setItem(key, value) {
+    this.storage.set(this.scopedKey(key), value);
+  }
+
+  getItem(key) {
+    return this.storage.getString(this.scopedKey(key)) || null;
+  }
+
+  removeItem(key) {
+    this.storage.delete(this.scopedKey(key));
+  }
+
+  clear() {
+    this.storage.clearAll();
+  }
+
+  scopedKey(key) {
+    return `-${this.scope}${this.module ? `:${this.module}` : ""}:${key}`;
+  }
+
+  static clearAll() {
+    new ScopedLocalStorage("CBWSDK").clear();
+    new ScopedLocalStorage("walletlink").clear();
+  }
 }
+
 exports.ScopedLocalStorage = ScopedLocalStorage;
